[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Workshop Bash 2024",
    "section": "",
    "text": "Informaci√≥n general\n\n\nSobre el curso üìåRequisitos previosAgenda üìÜ\n\n\nEl contenido de este curso se realiz√≥ en base al material realizado por Software Carpentry y RSG Ecuador. La literatura adicional se especifica en cada tema de forma pertinente.\n\nFechas: 10 y 11 diciembre 2024\nDuraci√≥n del curso: 10 horas\nHorario: 9 am a 4:30 pm\n\nEste curso se encuentra registrado en The Carpentries bajo el nombre de Curso de Unix Shell.\n\nInstructores:\n\nEvelia Lorena Coss-Navarrete - PostDoc, LIIGH-UNAM. Pagina web\nAaron Espinosa Jaime - Estudiante de maestria, Cinvestav-LANGEBIO.\n\nAyudantes:\n\nDaniel Ch√°vez - Profesor invitado, UAGro.\nCamilo P√©rez - Estudiante de doctorado, Cinvestav-LANGEBIO.\nAbel Lovaco Flores - Estudiante de maestria, Cinvestav-Irapuato.\nIsrael Aguilar - Posdoc, Tec de Monterrey.\n\nResumen:\nEste tutorial te ense√±ar√° los conceptos fundamentales en el empleo y manejo de Bash Shell, incluyendo la creaci√≥n de scripts de Bash, generaci√≥n de programas con funcionalidades sencillas aplicables a bioinform√°tica y a programaci√≥n en general.\nObjetivos:\nEn esta gu√≠a r√°pida aprender√°s a:\n\nMis primeros pasos en bash.\nConsultar informaci√≥n sobre archivos y directorios.\nPermisos y como cambiarlos.\nInformaci√≥n general sobre el An√°lisis de datos de RNA-Seq\nWildcards y Streams\nOperadores de redirecci√≥n de datos I/O\nEdici√≥n de archivos con los editores de texto y con sed\nBuenas pr√°cticas\nGeneraci√≥n de ligas simb√≥licas a archivos y orden en directorios\nFiltrado de texto (grep, cut, sort, uniq, wc)¬†\nCondicionales y bucles (for loops)\nCrear un script en Bash.\n\nCitar y reutilizar el material del curso\nLos datos del curso se pueden reutilizar y adaptar libremente con la debida atribuci√≥n. Todos los datos de los cursos de estos repositorios est√°n sujetos a la licencia Attribution-NonCommercial-ShareAlike 4.0 International (CC BY-NC-SA 4.0).\n\n\n\nDebes tener contar con una computadora con acceso a internet.\nTe proporcionaremos una cuenta a BetterLab para tener acceso a la terminal de Bash Shell.\n\n\n\n\n\n\n\n\n\n\n\nTema\nTiempo\nInstructor\n\n\n\n\nDia 1 (10 diciembre 2024)\n\n\n\n\nüî∑ Secci√≥n 1 - (9:00 - 12:00 h)\n\n\n\n\n\nUso de BetterLab\n\n10 min\nAaron Espinosa\n\n\n\nConceptos Unix y GNU/Linux\n\n10 min\nEvelia Coss\n\n\n\nMis primeros pasos en Bash\n\n10 min\nEvelia Coss\n\n\n\nEjercicio 1. Ubicaci√≥n en repositorios\n\n5 min\n\n\n\n\nConsultar informaci√≥n sobre archivos y directorios\n\n10 min\nAaron Espinosa\n\n\n\nComprimir y descomprimir archivos\n\n5 min\nAaron Espinosa\n\n\n\nEjercicio 2. Descomprimir archivos\n\n5 min\n\n\n\n‚òï Coffee break (20 min) - (10:30-10:50) ‚òï\n20 min\n\n\n\nüî∑¬† Secci√≥n 2 - (10:50 - 12:00 h)\n\n\n\n\n\nAn√°lisis de datos de RNA-Seq\n\n20 min\nAaron Espinosa\n\n\n\nEjercicio 3. Manejando datos\n\n10 min\nAaron Espinosa\n\n\n\nWildcards y Streams\n\n10 min\nAaron Espinosa\n\n\n\nEjercicio 4. Wildcard\n\n10 min\nAaron Espinosa\n\n\n\nOperadores de redirecci√≥n de datos I/O\n\n10 min\nAaron Espinosa\n\n\n\nEjercicio 5. Redirecci√≥n de salidas\n\n10 min\n\n\n\nüçïComida (1h 30min) - (12:00-13:30) üçï\n\n\n\n\nüî∑¬† Secci√≥n 3 - (13:30 - 14:20 h)\n\n\n\n\n\nEdici√≥n de archivos con los editores de texto (nano y vim) - Por crear (https://vinuesa.github.io/intro2linux/index.html#edici%C3%B3n-de-archivos-con-los-editores-vim-o-gnedit)\n\n10 min\nAaron Espinosa\n\n\n\nEjercicio 6: Edici√≥n de archivos - Por crear\n\n10 min\n\n\n\n\nEdici√≥n de archivos con el editor de flujo sed\n\n15 min\nAaron Espinosa\n\n\n\nEjercicio 7: Empleo de sed\n\n10 min\n\n\n\n‚òï Coffee break (10 min) - (14:20-14:30) ‚òï\n10 min\n\n\n\nüî∑¬† Secci√≥n 4 - (14:30 - 16:30 h)\n\n\n\n\n\nBuenas pr√°cticas\n\n15 min\nEvelia Coss\n\n\n\nEnlaces simb√≥licos (symlinks) y orden en directorios\n\n15 min\nEvelia Coss\n\n\n\nFiltrado de texto (grep, cut, sort, uniq, wc)\n\n20 min\nEvelia Coss\n\n\n\nEjercicio 8: Filtrado de archivos\n\n20 min\n\n\n\nDia 2 (11 diciembre 2024)\n\n\n\n\nüî∑¬† Secci√≥n 5 - (9:00 - 10:30 h)\n\n\n\n\n\nCondicionales - Por crear\n\n10 min\nAaron Espinosa\n\n\n\nEjercicio 9. Condicionales - Por crear\n\n10 min\n\n\n\n\nScripts en Bash (agregar mas ejercicios)\n\n30 min\nAaron Espinosa\n\n\n‚òï Coffee break (20 min) - (10:30-10:50) ‚òï\n\n\n\n\nüî∑¬† Secci√≥n 6 - (10:50 - 12:00 h)\n\n\n\n\n\nBucles (for loops) - Por crear (https://swcarpentry.github.io/shell-novice-es/05-loop.html)\n\n15 min\nAaron Espinosa\n\n\n\nEjercicio 10. for loops - Por crear\n\n10 min\n\n\n\n\nRepaso y Ejercicio 12: En parejas (Agregar ejercicios de https://swcarpentry.github.io/shell-novice-es/04-pipefilter.html)\n\n35 min\nAaron Espinosa\n\n\nüçïComida (1h 30min) - (12:00-13:30) üçï\n\n\n\n\n\nEjercicios en equipo de 3 personas\n\n40 min\nEvelia Coss y Aaron Espinosa\n\n\n\nPresentacion del analisis (10 min por equipo)\n\n10 min\n\n\n\n‚òï Coffee break (10 min) - (14:20-14:30) ‚òï\n\n\n\n\n\nPresentacion del analisis (10 min por equipo)\n\n2 h",
    "crumbs": [
      "Informaci√≥n general"
    ]
  },
  {
    "objectID": "BetterLab.html#material-suplementario",
    "href": "BetterLab.html#material-suplementario",
    "title": "1¬† Uso de BetterLab",
    "section": "1.1 Material suplementario",
    "text": "1.1 Material suplementario\n\nNelly Selem Tutorial - Bioinform√°tica\nEn Windows puedes usar Git Bash."
  },
  {
    "objectID": "intro.html#qu√©-es-unix",
    "href": "intro.html#qu√©-es-unix",
    "title": "2¬† Conceptos Unix y GNU/Linux",
    "section": "",
    "text": "Sistema operativo (SO) creado por Ken Thompson y Dennis Ritchie de la empresa Bell Laboratories en 1969.\nSO multitarea y multiusuario.",
    "crumbs": [
      "**Section 1** - Introducci√≥n a Bash",
      "<span class='chapter-number'>2</span>¬† <span class='chapter-title'>Conceptos Unix y GNU/Linux</span>"
    ]
  },
  {
    "objectID": "intro.html#gnulinux",
    "href": "intro.html#gnulinux",
    "title": "2¬† Conceptos Unix y GNU/Linux",
    "section": "2.2 GNU/Linux",
    "text": "2.2 GNU/Linux\n\nEn 1983 Richard Stallman lider√≥ la iniciativa GNU (GNU‚Äôs Not Unix), SO compatible con UNIX de libre distribuci√≥n y acceso sin restricciones al c√≥digo fuente.\nEn 1991 Linus Torvalds cre√≥ su propio kernel (Linux), que es la parte del SO que permite la comunicaci√≥n con los componentes de Hardware. Este kernel fue distribuido de forma libre y gratuita.\nAmbos proyectos se juntaron y se cre√≥ GNU/Linux",
    "crumbs": [
      "**Section 1** - Introducci√≥n a Bash",
      "<span class='chapter-number'>2</span>¬† <span class='chapter-title'>Conceptos Unix y GNU/Linux</span>"
    ]
  },
  {
    "objectID": "intro.html#filosof√≠a-gnulinux",
    "href": "intro.html#filosof√≠a-gnulinux",
    "title": "2¬† Conceptos Unix y GNU/Linux",
    "section": "2.3 Filosof√≠a GNU/Linux",
    "text": "2.3 Filosof√≠a GNU/Linux\n\nLos usuarios son libres de ejecutar, copiar, distribuir, estudiar, cambiar y mejorar el software.\nEl software libre se refiere a las libertades mencionadas, no al precio.\n‚Äúopen source‚Äù vs ‚Äúfree software‚Äù.",
    "crumbs": [
      "**Section 1** - Introducci√≥n a Bash",
      "<span class='chapter-number'>2</span>¬† <span class='chapter-title'>Conceptos Unix y GNU/Linux</span>"
    ]
  },
  {
    "objectID": "intro.html#ubuntu",
    "href": "intro.html#ubuntu",
    "title": "2¬† Conceptos Unix y GNU/Linux",
    "section": "2.4 Ubuntu",
    "text": "2.4 Ubuntu\n\nUna de las distribuciones de GNU/Linux m√°s populares.\nEst√° basada en Debian y fue desarrollada por la empresa Canonical\nFacilidad de uso e instalaci√≥n.\nInterfaz de usuario amigable.",
    "crumbs": [
      "**Section 1** - Introducci√≥n a Bash",
      "<span class='chapter-number'>2</span>¬† <span class='chapter-title'>Conceptos Unix y GNU/Linux</span>"
    ]
  },
  {
    "objectID": "intro.html#shell-bash-bash-shell",
    "href": "intro.html#shell-bash-bash-shell",
    "title": "2¬† Conceptos Unix y GNU/Linux",
    "section": "2.5 Shell / Bash / Bash Shell",
    "text": "2.5 Shell / Bash / Bash Shell\n\nLa shell es el programa que provee una interfaz de l√≠nea de comandos (CLI), que permite la comunicaci√≥n entre el usuario y el SO.\nLa mayor√≠a de distribuciones de Linux tienen por defecto bash (‚ÄúBourne Again SHell‚Äù) como shell. Hay otros tipos de shell como sh, csh, tcsh, ksh, zsh, entre otras.\n\n\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nBash es un int√©rprete de comandos que te da el poder de hacer tareas simples r√°pidamente.",
    "crumbs": [
      "**Section 1** - Introducci√≥n a Bash",
      "<span class='chapter-number'>2</span>¬† <span class='chapter-title'>Conceptos Unix y GNU/Linux</span>"
    ]
  },
  {
    "objectID": "intro.html#por-qu√©-usarlo",
    "href": "intro.html#por-qu√©-usarlo",
    "title": "2¬† Conceptos Unix y GNU/Linux",
    "section": "2.6 ¬øPor qu√© usarlo?",
    "text": "2.6 ¬øPor qu√© usarlo?\n\nVentajas de usar Bash o terminal:\n\nEs m√°s c√≥modo para programar que usar un rat√≥n.\nLos comandos son breves y eficientes, aunque pueden parecer cr√≠pticos.\nPermite automatizar tareas y manejar grandes vol√∫menes de datos.\n\nMejora de la productividad y reproducibilidad:\n\nFacilita la creaci√≥n de pipelines potentes combinando herramientas existentes.\nLa automatizaci√≥n asegura la repetici√≥n exacta de procesos con simples comandos.\n\nInteracci√≥n con sistemas especializados:\n\nEs la forma m√°s sencilla de trabajar con m√°quinas remotas y supercomputadoras.\nEs esencial para el uso de herramientas y recursos especializados, como la computaci√≥n de alto rendimiento.\n\nRelevancia para la ciencia y el an√°lisis de datos:\n\nLa terminal es clave para aprovechar clusters y sistemas en la nube.\nLas habilidades adquiridas son √∫tiles para resolver problemas cient√≠ficos y computacionales complejos.",
    "crumbs": [
      "**Section 1** - Introducci√≥n a Bash",
      "<span class='chapter-number'>2</span>¬† <span class='chapter-title'>Conceptos Unix y GNU/Linux</span>"
    ]
  },
  {
    "objectID": "intro.html#material-suplementario",
    "href": "intro.html#material-suplementario",
    "title": "2¬† Conceptos Unix y GNU/Linux",
    "section": "2.7 Material suplementario",
    "text": "2.7 Material suplementario\nSi quieren aprender temas m√°s sobre UNIX, GNU/Linux, bash, emulador de terminal y otros tema, pueden explorar los siguientes recursos, que son de acceso libre:\n\nKross, S. (2017). The unix workbench. Leanpub. https://leanpub.com/unix\nRoss, A. (2019). The Ultimate Linux Newbie Guide. https://linuxnewbieguide.org/\nShotts, W. (2019). The Linux command line: a complete introduction. No Starch Press. http://www.linuxcommand.org/tlcl.php/index.php\nLinux Journey. (2020). Linux Journey. https://linuxjourney.com/\nGNU. (2020). GNU. https://www.gnu.org/\nGNU/Linux para bioinformatica\nSoftware Carpentry - Introducci√≥n a la Terminal",
    "crumbs": [
      "**Section 1** - Introducci√≥n a Bash",
      "<span class='chapter-number'>2</span>¬† <span class='chapter-title'>Conceptos Unix y GNU/Linux</span>"
    ]
  },
  {
    "objectID": "Bash.html#entorno-de-bash",
    "href": "Bash.html#entorno-de-bash",
    "title": "3¬† Mis primeros pasos en Bash",
    "section": "3.1 Entorno de Bash",
    "text": "3.1 Entorno de Bash\n\nEl signo¬†$¬†es un¬†prompt, que nos muestra que la terminal est√° esperando una entrada; tu terminal puede usar un car√°cter diferente como prompt y puede agregar informaci√≥n antes de √©l. Al teclear comandos, ya sea a partir de estas lecciones o de otras fuentes, no escribas el prompt ($), s√≥lo los comandos que le siguen."
  },
  {
    "objectID": "Bash.html#preparaci√≥n-del-directorio-de-trabajo",
    "href": "Bash.html#preparaci√≥n-del-directorio-de-trabajo",
    "title": "3¬† Mis primeros pasos en Bash",
    "section": "3.2 Preparaci√≥n del directorio de trabajo",
    "text": "3.2 Preparaci√≥n del directorio de trabajo\n\nRuta / Camino absoluto\ncd /home/usuario/data/\nRuta / Camino relativo\ncd ../ # Ir a la carpeta anterior\n\n\n\n\n\n\n\nNote\n\n\n\nNOTA 1: Si das cd y no indicas una ruta absoluta, te llevara al Directorio Raiz (~).\nNOTA 2: Puedes usar la tecla TAB para completar el nombre de la carpeta. En caso de que tengas m√°s de dos carpetas que inicien igual, tendr√°s que terminar de completar el nombre.\nNOTA 3: Podemos usar pwd para saber nuestra ubicaci√≥n exacta."
  },
  {
    "objectID": "Bash.html#conocer-mi-direcci√≥n-ubicaci√≥n",
    "href": "Bash.html#conocer-mi-direcci√≥n-ubicaci√≥n",
    "title": "3¬† Mis primeros pasos en Bash",
    "section": "3.3 Conocer mi direcci√≥n / ubicaci√≥n",
    "text": "3.3 Conocer mi direcci√≥n / ubicaci√≥n\nAveriguemos d√≥nde estamos, ejecutando el comando¬†pwd¬†(que significa ‚Äúimprime directorio de trabajo‚Äù - ‚Äúprint working directory‚Äù). En cualquier momento, nuestro¬†directorio actual¬†es nuestro directorio predeterminado, es decir, el directorio que la computadora supone queremos ejecutar comandos a menos que especifiquemos expl√≠citamente otra cosa. En este caso la respuesta de la computadora es¬†/Users/nelle, el cual es el directorio de inicio de Nelle, tambi√©n conocido como su directorio¬†home:\npwd # /c/Users/ecoss\nEn la computadora de Evelia, el sistema de archivos se ve as√≠:\n\n\n\n\n\nEn la parte superior est√° el directorio ra√≠z o root que contiene todo lo dem√°s. Nos referimos a este directorio usando un caracter de barra / por si solo; esta es la barra al inicio de /Users/ecoss.\nDentro de ese directorio hay otros directorios: bin (que es donde se almacenan algunos programas preinstalados), data (para archivos de datos diversos), Users (donde se encuentran los directorios personales de los usuarios), tmp (para archivos temporales que no necesitan ser almacenados a largo plazo), etc√©tera.\n\n\n\n\n\n\nEjercicio 1\n\n\n\nA partir de¬†/Users/ecoss/data/, ¬øCu√°l de los siguientes comandos podr√≠a Amanda usar para navegar a su directorio de inicio, que es¬†/Users/ecoss?\n\ncd .\ncd /\ncd /``Users``/ecoss\ncd ../..\ncd ~\ncd home\ncd ~/data/..\ncd\ncd ..\n\n\n\n\n\n\nSoluci√≥n\n\n\n\n\n\n\nNo: . significa el directorio actual.\nNo: / significa el directorio ra√≠z.\nNo: El directorio home de Amanda es /Users/ecoss.\nNo: sube dos niveles, es decir termina en /Users.\nS√≠: ~ significa el directorio home del usuario, en este caso /Users/ecoss.\nNo: esto navegar√≠a a un directorio home en el directorio actual, si existe.\nS√≠: innecesariamente complicado, pero correcto.\nS√≠: un atajo para volver al directorio home del usuario.\nS√≠: sube un nivel.\n\n\n\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nSi colocamos .. significa ‚Äòel directorio por encima del actual o el directorio anterior‚Äô, pero si colocamos . significa el directorio actual.\n\n\nEjemplo de rutas:"
  },
  {
    "objectID": "Bash.html#comandos-b√°sicos",
    "href": "Bash.html#comandos-b√°sicos",
    "title": "3¬† Mis primeros pasos en Bash",
    "section": "3.4 Comandos b√°sicos",
    "text": "3.4 Comandos b√°sicos\n\n\n\n\n\n\n\n\nComandos\nInformaci√≥n\nArgumentos\n\n\n\n\nssh\nConexi√≥n a servidores\nssh usuario@servidor.mx\n\n\nls\nObservar el contenido de los archivos en una carpeta\nls directorio/\n\n\ncd\nMoverse de directorios\ncd /home/usuario/data/\n\n\nmkdir\nCrear un nuevo directorio\nmkdir data\n\n\nrmdir\nEliminar el directorio\nrmkdir -rf data\n\n\nnano¬†/¬†vim\nEditores de texto plano\nnano Archivo.txt / vim Archivo.txt\n\n\ncp\nCopiar archivos\ncp Archivo1.txt /home/usuario/data/\n\n\nmv\nMover un archivo o carpeta\n\n\n\necho\nPara llamar y/o declarar variables\necho ‚ÄúHello world‚Äù\n\n\nchmod\nCambiar permisos del usuario\nchmod 777 data/\n\n\nrsync\nDescargar o subir archivos\n\n\n\nscp\nDescargar o subir archivos\n\n\n\ncat\nVisualizar contenido de un archivo. Escribe el contenido del archivo de manera secuencial a la salida est√°ndar, a la ventana de Terminal.\n\n\n\nless\nLeer contenido de un archivo sin interrumpir la pantalla de Terminal. Similar a¬†Vim¬†pero sin opci√≥n para escribir.¬†Se sale del modo visualizaci√≥n con¬†q.\n\n\n\nfind\nBusca archivos en un directorio espec√≠fico.\n\n\n\nhead\nVisualizar primeras l√≠neas de un archivo.\n\n\n\ntail\nVisualizar √∫ltimas l√≠neas de un archivo.\n\n\n\nwhich\nIndica el directorio donde se encuentra un particular comando o programa que se haya podido encontrar usando los directorios guardados en la variable de estado¬†PATH.\nwhich bash\n\n\n\n\n\n\n\n\n\nAyuda de funciones\n\n\n\nPuedes consultar mas informaci√≥n usando ls --help"
  },
  {
    "objectID": "Bash.html#consultar-informaci√≥n-sobre-archivos-y-directorios",
    "href": "Bash.html#consultar-informaci√≥n-sobre-archivos-y-directorios",
    "title": "3¬† Mis primeros pasos en Bash",
    "section": "3.5 Consultar informaci√≥n sobre archivos y directorios",
    "text": "3.5 Consultar informaci√≥n sobre archivos y directorios\n\n3.5.1 Informaci√≥n contenida\nCada columna en la salida anterior tiene un significado:\n\n\n\n\n\n\n\n3.5.2 Permisos\nCada usuario tiene permisos diferentes cuando crea un archivo. Los permisos pueden modificarse con chmod.\nLos caracteres atribuidos a los permisos son:\n\nr : escritura (Read)\nw : lectura (Write)\nx : ejecuci√≥n (eXecute)\n\nEn el siguiente ejemplo, el usuario cuenta con todos los permisos activos, mientras que el grupo y otros tienen solo permisos de lectura y ejecuci√≥n."
  },
  {
    "objectID": "Bash.html#chmod-cambiar-permisos",
    "href": "Bash.html#chmod-cambiar-permisos",
    "title": "3¬† Mis primeros pasos en Bash",
    "section": "3.6 chmod: Cambiar permisos",
    "text": "3.6 chmod: Cambiar permisos\nLa representaci√≥n octal de chmod es muy sencilla\n\nr = Lectura tiene el valor de 4\nw = Escritura tiene el valor de 2\nx = Ejecuci√≥n tiene el valor de 1\n\n\n\n\nPermisos\nValor\nSignificado\n\n\n\n\nrwx\n7\nLectura, escritura y ejecuci√≥n\n\n\nrw-\n6\nLectura, escritura\n\n\nr-x\n5\nLectura y ejecuci√≥n\n\n\nr--\n4\nLectura\n\n\n-wx\n3\nEscritura y ejecuci√≥n\n\n\n-w-\n2\nEscritura\n\n\n--x\n1\nEjecuci√≥n\n\n\n---\n0\nSin permisos\n\n\n\nPor lo tanto:\n\n\n\nForma larga\nForma Octal\n\n\n\n\nchmod u=rwx,g=rwx,o=rx\nchmod 775\n\n\nchmod u=rwx,g=rx,o=\nchmod 760\n\n\nchmod u=rw,g=r,o=r\nchmod 644\n\n\nchmod u=rw,g=r,o=\nchmod 640\n\n\nchmod u=rw,go=\nchmod 600\n\n\nchmod u=rwx,go=\nchmod 700"
  },
  {
    "objectID": "Bash.html#comprimir-y-descomprimir-archivos",
    "href": "Bash.html#comprimir-y-descomprimir-archivos",
    "title": "3¬† Mis primeros pasos en Bash",
    "section": "3.7 Comprimir y descomprimir archivos",
    "text": "3.7 Comprimir y descomprimir archivos\nLos archivos pueden contener diversos tipos de extensiones, dependiendo del objetivo ser√° necesario descomprimirlos y en otros dejarlos comprimidos para no abarcar tanto espacio en tu espacio de trabajo.¬†\n\n\n\n\n\n\n\n\nTipo de archivo\nComprimir\nDescomprimir\n\n\n\n\nCarpeta.tar\ntar -cvf carpeta.tar /dir/a/comprimir/carpeta\ntar -xvf carpeta.tar\n\n\nCarpeta.tar.gz\ntar -czvf carpeta.tar.gz /carpeta/a/empaquetar/carpeta\ntar -zxvf carpeta.tar.gz\n\n\nCarpeta.gz\ngzip -9 carpeta.gz carpeta/a/empaquetar/carpeta\ngunzip -kd carpeta.gz\n\n\nCarpeta.zip\nzip -r carpeta.zip carpeta\nunzip carpeta.zip\n\n\n\n\n\n\n\n\n\nEjercicio 2\n\n\n\n\nDescarga todo el repositorio comprimido unix.bioinfo.rsgecuador en tu computadora. El archivo se almacenara con la extension (.ZIP).\nColocate en la carpeta donde se encuentra el archivo. Ejemplo en mi computadora: cd \"C:/Users/ecoss/Documents/Respaldos/Github_notes/Workshop_Bash2024/data\"\nDescomprime el archivo ZIP. unzip unix.bioinfo.rsgecuador-gh-pages.zip"
  },
  {
    "objectID": "Bash.html#material-suplementario",
    "href": "Bash.html#material-suplementario",
    "title": "3¬† Mis primeros pasos en Bash",
    "section": "3.8 Material suplementario",
    "text": "3.8 Material suplementario\n\nSoftware Carpentry. La terminal de Unix\nRSG Ecuador.GNU/Linux para bioinfomatica\nIntroduction to the Unix Shell for Transcriptomics Tutorial."
  },
  {
    "objectID": "Rnaseq_intro.html",
    "href": "Rnaseq_intro.html",
    "title": "4¬† An√°lisis de datos de RNA-Seq",
    "section": "",
    "text": "5 Control de calidad de los datos"
  },
  {
    "objectID": "Rnaseq_intro.html#bioinform√°tica-se-conforma-de-la-computaci√≥n-biol√≥gica-matem√°ticas-y-estad√≠stica",
    "href": "Rnaseq_intro.html#bioinform√°tica-se-conforma-de-la-computaci√≥n-biol√≥gica-matem√°ticas-y-estad√≠stica",
    "title": "4¬† An√°lisis de datos de RNA-Seq",
    "section": "4.1 Bioinform√°tica se conforma de la computaci√≥n, biol√≥gica, matem√°ticas y estad√≠stica",
    "text": "4.1 Bioinform√°tica se conforma de la computaci√≥n, biol√≥gica, matem√°ticas y estad√≠stica\nLa bioinform√°tica, en relaci√≥n con la¬†gen√©tica y la gen√≥mica, es una¬†subdisciplina cient√≠fica¬†que implica el uso de¬†ciencias inform√°ticas¬†para¬†recopilar, almacenar, analizar y diseminar datos biol√≥gicos, como secuencias de ADN y amino√°cidos o anotaciones sobre esas secuencias¬†NIH, 2023."
  },
  {
    "objectID": "Rnaseq_intro.html#transcriptoma",
    "href": "Rnaseq_intro.html#transcriptoma",
    "title": "4¬† An√°lisis de datos de RNA-Seq",
    "section": "4.2 Transcriptoma",
    "text": "4.2 Transcriptoma\nEs el conjunto de todas las mol√©culas de RNA producidos por el genoma bajo condiciones espec√≠ficas o en una c√©lula espec√≠fica (scRNA-Seq) o en una poblaci√≥n de c√©lulas (bulk RNA-Seq).\n\n4.2.1 ¬øPorque es importante medir los cambios en la expresi√≥n g√©nica (transcriptoma)?\n\nLas variaciones en la expresi√≥n entre condiciones se puede relacionar con los cambios en los procesos biol√≥gicos.\nEl transcriptoma nos da una aproximaci√≥n de los cambios relativos en la expresi√≥n g√©nica de los genes codificantes y no codificantes.\n\n\n\n\n\n\n\nPalabras claves:\n\n\n\n\nGenoma - Fijo\nTranscriptoma - Altamente variable"
  },
  {
    "objectID": "Rnaseq_intro.html#el-transcriptoma-var√≠a-seg√∫n",
    "href": "Rnaseq_intro.html#el-transcriptoma-var√≠a-seg√∫n",
    "title": "4¬† An√°lisis de datos de RNA-Seq",
    "section": "4.3 El transcriptoma var√≠a seg√∫n:",
    "text": "4.3 El transcriptoma var√≠a seg√∫n:\n\nTejido / √ìrgano\nC√©lula\nAmbiente (estr√©s)\nMedicamentos (tratamientos)\nSalud\nEdad\nEtapa del desarrollo"
  },
  {
    "objectID": "Rnaseq_intro.html#idea-principal-de-rna-seq",
    "href": "Rnaseq_intro.html#idea-principal-de-rna-seq",
    "title": "4¬† An√°lisis de datos de RNA-Seq",
    "section": "4.4 Idea principal de RNA-Seq",
    "text": "4.4 Idea principal de RNA-Seq\n\n4.4.1 Relacionar un fenotipo con los cambios de expresi√≥n de los genes en una condici√≥n dada\n\n\n\nImagen tomada de: https://www.acobiom.com/en/rna-seq-en/"
  },
  {
    "objectID": "Rnaseq_intro.html#pipeline-general",
    "href": "Rnaseq_intro.html#pipeline-general",
    "title": "4¬† An√°lisis de datos de RNA-Seq",
    "section": "4.5 Pipeline general",
    "text": "4.5 Pipeline general\n\n\n\nImagen proveniente de mRNA-Seq data analysis workflow"
  },
  {
    "objectID": "Rnaseq_intro.html#quality-check-quality-control",
    "href": "Rnaseq_intro.html#quality-check-quality-control",
    "title": "4¬† An√°lisis de datos de RNA-Seq",
    "section": "5.1 Quality Check / Quality Control",
    "text": "5.1 Quality Check / Quality Control\n\nUno de los pasos m√°s importantes. Ded√≠cale tiempo.\nLa calidad de tus datos importa, bibliotecas mal secuenciadas genera datos desconfiables.\nDebes analizar su calidad para poder reclamar en la secuenciaci√≥n (~1 semana).\n\n\n\n\n\n\n\nProgramas:\n\n\n\n\nFastQC\nMultiQC"
  },
  {
    "objectID": "Rnaseq_intro.html#archivos-fastq-fastq.gz-fq.gz",
    "href": "Rnaseq_intro.html#archivos-fastq-fastq.gz-fq.gz",
    "title": "4¬† An√°lisis de datos de RNA-Seq",
    "section": "5.2 Archivos fastq (fastq.gz / fq.gz)",
    "text": "5.2 Archivos fastq (fastq.gz / fq.gz)\n\nDerivan del formato FASTA.\nMuestra la calidad de cada nucle√≥tido.\nCada secuencia est√° representada por 4 l√≠neas:\n\n\n\n@ ID del read + informaci√≥n de la corrida\nSecuencia\nS√≠mbolo ‚Äú+‚Äù\nInformaci√≥n de la calidad de secuenciaci√≥n de cada base. Cada letra o s√≠mbolo representa a una base de la secuencia codificado en formato (Escala Phred y c√≥digo ASCII)"
  },
  {
    "objectID": "Rnaseq_intro.html#phred-quality-score-puntuaci√≥n-de-calidad",
    "href": "Rnaseq_intro.html#phred-quality-score-puntuaci√≥n-de-calidad",
    "title": "4¬† An√°lisis de datos de RNA-Seq",
    "section": "5.3 Phred Quality score / Puntuaci√≥n de calidad",
    "text": "5.3 Phred Quality score / Puntuaci√≥n de calidad\nQ = -10 x log10(P) # where P is the probability that a base call is erroneous\n\nQ = Phred Quality score\nP = Probability of incorrect base call\n\n\nEl valor m√°ximo de calidad es = ~40 (zona verde) y los valores &lt; 20 se consideran de baja calidad.\n\n\n\n\n\n\nEjemplo de Buena calidad\n\n\n\nReporte de FastQC con buena calidad de las lecturas en la zona verde.\n\n\n\n\n\n\n\n\n\n\n\n\n\nEjercicio 3\n\n\n\n\nUbicarte dentro de la carpeta descomprimida. cd unix.bioinfo.rsgecuador-gh-pages\nVisualiza el contenido del archivo ‚Äú_files/secuencias_bash.fastq‚Äù empleando head. head _files/secuencias_bash.fastq\nCalcula el numero de lineas contenidas en este archivo. wc -l _files/secuencias_bash.fastq\nImprime las lineas 4 a 8 del archivo. sed -n '4,8p' _files/secuencias_bash.fastq\nPodemos utilizar la funci√≥n grep -c para contar el n√∫mero de secuencias de un archivo (de nuevo, sustituya archivo por el nombre de uno de los archivos): grep -c \"^@SRR\" _files/secuencias_bash.fastq"
  },
  {
    "objectID": "Rnaseq_intro.html#material-suplementario",
    "href": "Rnaseq_intro.html#material-suplementario",
    "title": "4¬† An√°lisis de datos de RNA-Seq",
    "section": "5.4 Material suplementario",
    "text": "5.4 Material suplementario\n\nmRNA-Seq data analysis workflow\nQuality Control using FastQC\nFundamentals: FASTQ files"
  },
  {
    "objectID": "Parte2A.html#caracteres-y-strings",
    "href": "Parte2A.html#caracteres-y-strings",
    "title": "5¬† Wildcards y Streams",
    "section": "5.1 Caracteres y strings",
    "text": "5.1 Caracteres y strings\nLos caracteres son unidades de informaci√≥n que se representan con s√≠mbolos. Pueden ser de varios tipos como alfanum√©ricos, n√∫meros enteros, signos de puntuaci√≥n. Varios caracteres son interpretados por la shell de manera especial. Estos se llaman caracteres especiales, claro, y permiten desarrollar alguna l√≥gica, dependiendo del contexto. Por ejemplo, algunos caracteres: @ # . ? ! , / \\ &gt; ~ a ¬µ g ¬ß R.\n\n\n\n\n\n\nNote\n\n\n\nCada caracter se asocia a una combinaci√≥n diferente de teclas en el teclado del computador.\n\n\nLos strings son arreglos de caracteres. Esto quiere decir que son caracteres en conjunto y con un orden en particular. Por ejemplo el string pizza tiene 4 diferentes caracteres: i, p, z, a. Diferentes combinaciones de caracteres pueden formar diferentes strings.\nCreemos un string y luego imprim√°moslo en la pantalla del Terminal. Escribe los siguientes comandos:\nmi_primer_string=\"Taller de bioinform√°tica\"\necho $mi_primer_string"
  },
  {
    "objectID": "Parte2A.html#wildcards",
    "href": "Parte2A.html#wildcards",
    "title": "5¬† Wildcards y Streams",
    "section": "5.2 Wildcards",
    "text": "5.2 Wildcards\nLos wildcards o wild characters son s√≠mbolos utilizados para representar uno o m√°s caracteres. Se pueden utilizar con otros comandos para facilitar el procesamiento o b√∫squeda de archivos, directorios y datos en general.\n\n\n\n\n\n\n\nWildcard\nFunci√≥n\n\n\n\n\n*\nAsocia uno o m√°s caracteres especificados por el usuario, con caracteres en un string con el que se opera.\n\n\n?\nAsocia solo un caracter a la vez en un string.\n\n\n[ ]\nAsocia cuaquiera de los caracteres dentro en un string.\n\n\n\n\n\n\n\n\n\nImportant\n\n\n\nEl wildcard m√°s usado es * porque es muy vers√°til.\n\n\n\n\n\n\n\n\nEjercicio 4\n\n\n\nEl wildcard¬†*¬†me permitir√≠a encontrar todos los archivos en una carpeta que tengan la palabra¬†TESIS¬†en ellos. Primero generemos estos archivos:\ncd ~/taller_unix/3_manejo_terminal \ntouch MI_TESIS.tex MI_TESIS_tutor2.tex TESIS.tex TESIS_YA_ACABATE.tex TESIS_finaaaaal.tex TESIS_final.tex TESIS_tutor1.tex TESIS_tutor2.tex a_reporte_01.txt b_reporte_02.txt c_reporte_03.txt z_reporte_30.txt \n\nEnlista todos los archivos que comiencen con ‚ÄúTESIS‚Äù.\nEnlista todos los archivos que terminen con el string ‚Äú.tex‚Äù\nBuscar todos los archivos contengan la palabra¬†‚ÄúTESIS\"¬†pero con 3 caracteres desconocidos antes.\nBuscar los archivos que terminen con el n√∫mero 1 o 2 en su nombre antes de la extensi√≥n del archivo.\nEncontrar los archivos que terminen en dos n√∫meros del 1 al 3 y del 0 al 2 antes del formato del archivo.\nEncontrar todos los archivos con este formato¬†?_reporte_[0-3][0-3].txt\nEncontrar todos los archivos que contengan por¬†a¬†o¬†z.\nBorramos todos estor archivos que terminen en ‚Äú.txt‚Äù y ‚Äú.tex‚Äù\n\n\n\n\n\n\n\nSoluci√≥n\n\n\n\n\n\n1. ls -l TESIS*\n2. ls -l *.tex\n3. ls -l ???TESIS*\n4. ls -l *[1-2].tex\n5. ls -l *[0-3][0-2].txt\n6. ls -l ?_reporte_[0-3][0-3].txt\n7. ls -l *[az]*\n8. rm *.tex *.txt\n\n\n\n\n\n\n\n\n\n\n\nEjercicios de repaso\n\n\n\nPuedes seguir repasando y aprendiendo de las expresiones regulares en la pagina de RegexOne."
  },
  {
    "objectID": "Parte2A.html#material-suplementario",
    "href": "Parte2A.html#material-suplementario",
    "title": "5¬† Wildcards y Streams",
    "section": "5.3 Material suplementario",
    "text": "5.3 Material suplementario\n\nRSG Ecuador. Scripts en Bash\nRSG Ecuador. Wildcards y Streams\nRSG Ecuador. Expresiones regulares (regex)\nWildcard Selection in Bash"
  },
  {
    "objectID": "Parte2B.html#material-suplementario",
    "href": "Parte2B.html#material-suplementario",
    "title": "6¬† Operadores de redirecci√≥n de datos I/O",
    "section": "6.1 Material suplementario",
    "text": "6.1 Material suplementario\n\nRSG Ecuador. Scripts en Bash\nRSG Ecuador. Wildcards y Streams\nRSG Ecuador. Expresiones regulares (regex)\nWildcard Selection in Bash"
  },
  {
    "objectID": "Parte3A.html#ejercicio-6-edici√≥n-de-archivos---por-crear",
    "href": "Parte3A.html#ejercicio-6-edici√≥n-de-archivos---por-crear",
    "title": "7¬† Edici√≥n de archivos con los editores de texto (nano y vim)",
    "section": "7.1 Ejercicio 6: Edici√≥n de archivos - Por crear",
    "text": "7.1 Ejercicio 6: Edici√≥n de archivos - Por crear"
  },
  {
    "objectID": "Parte3A.html#referencias",
    "href": "Parte3A.html#referencias",
    "title": "7¬† Edici√≥n de archivos con los editores de texto (nano y vim)",
    "section": "7.2 Referencias",
    "text": "7.2 Referencias\n\nAprende vim",
    "crumbs": [
      "**Section 3** - Edici√≥n de archivos",
      "<span class='chapter-number'>7</span>¬† <span class='chapter-title'>Edici√≥n de archivos con los editores de texto (nano y vim)</span>"
    ]
  },
  {
    "objectID": "Parte3B.html#ejercicio-7-edici√≥n-de-archivos---por-crear",
    "href": "Parte3B.html#ejercicio-7-edici√≥n-de-archivos---por-crear",
    "title": "8¬† Edici√≥n de archivos con el editor de flujo sed",
    "section": "8.1 Ejercicio 7: Edici√≥n de archivos - Por crear",
    "text": "8.1 Ejercicio 7: Edici√≥n de archivos - Por crear"
  },
  {
    "objectID": "Parte3B.html#referencias",
    "href": "Parte3B.html#referencias",
    "title": "8¬† Edici√≥n de archivos con el editor de flujo sed",
    "section": "8.3 Referencias",
    "text": "8.3 Referencias\n\nRegEx\nWikipedia: Expresiones Regulares\nYouTube: Expresiones regulares con Notepad++",
    "crumbs": [
      "**Section 3** - Edici√≥n de archivos",
      "<span class='chapter-number'>8</span>¬† <span class='chapter-title'>Edici√≥n de archivos con el editor de flujo `sed`</span>"
    ]
  },
  {
    "objectID": "BuenasPracticas.html#materiales-informativos",
    "href": "BuenasPracticas.html#materiales-informativos",
    "title": "9¬† Buenas practicas",
    "section": "9.1 Materiales informativos",
    "text": "9.1 Materiales informativos\n\nCurso de Joselyn Cristina Ch√°vez Fuentes\nMe ayudo mucho este Video\nDocumentaci√≥n de funciones de Andr√©s Arredondo Cruz\n\nüí™ Estuve muy intensa viendo su codigo. Muchas gracias por tenerlos publico."
  },
  {
    "objectID": "BuenasPracticas.html#un-algoritmo-nos-permite-resolver-un-problema",
    "href": "BuenasPracticas.html#un-algoritmo-nos-permite-resolver-un-problema",
    "title": "9¬† Buenas practicas",
    "section": "9.2 Un algoritmo nos permite resolver un problema ‚≠ê",
    "text": "9.2 Un algoritmo nos permite resolver un problema ‚≠ê\nUn algoritmo es un m√©todo para resolver un problema mediante una serie de pasos definidos, precisos y finitos.\n\nDefinido: si se sigue dos veces, se obtiene el mismo resultado. Es reproducible.\nPreciso: implica el orden de realizaci√≥n de cada uno de los pasos.\nFinito: Tiene un numero determinado de pasos, implica que tiene un fin.\n\n\nUn algoritmo podemos definirlo como un programa o software."
  },
  {
    "objectID": "BuenasPracticas.html#para-escribir-un-buen-software-necesitas",
    "href": "BuenasPracticas.html#para-escribir-un-buen-software-necesitas",
    "title": "9¬† Buenas practicas",
    "section": "9.3 Para escribir un buen software necesitas:",
    "text": "9.3 Para escribir un buen software necesitas:\n\nEscribir c√≥digo mantenible (maintainable code), usar control de versiones (version control) y rastreadores de problemas (issue trackers), revisiones de c√≥digo (code reviews), pruebas unitarias (unit testing) y automatizaci√≥n de tareas (task automation).\nWilson, et al.¬†2014. PLOS Biology\n\nCon el fin de previnir retracciones.\n\n\n\n\n\n\nPasos para escribir un buen software\n\n\n\n\nAn√°lisis del problema / Definir el problema\nDise√±o del algoritmo / Dise√±o del programa\nCodificaci√≥n / Escribir el c√≥digo\nCompilaci√≥n y ejecuci√≥n del programa\nVerificaci√≥n / Realizar pruebas\nDepuraci√≥n / Detectar los errores y corregirlos\n\n\nProgramacion defensiva\n\n\nDocumentaci√≥n"
  },
  {
    "objectID": "BuenasPracticas.html#paso-7-documentaci√≥n",
    "href": "BuenasPracticas.html#paso-7-documentaci√≥n",
    "title": "9¬† Buenas practicas",
    "section": "9.4 Paso 7: Documentaci√≥n",
    "text": "9.4 Paso 7: Documentaci√≥n\n\n\n\n\n\n\nNote\n\n\n\n\nAutor (author): Su nombre\nDia (date): Fecha de creaci√≥n\nPaquetes (packages)\nDirectorio de trabajo (Working directory): En que carpeta se encuentra tu datos y programa.\nInformaci√≥n descriptiva del programa (Description): ¬øPara qu√© sirve el programa? Ej: El siguiente programa realiza la suma de dos numeros enteros a partir de la entrada del usuario y posteriormente la imprime en pantalla.\nUsage ¬øC√≥mo se utiliza?\nArgumentos (Arguments)\n\nInformaci√≥n de entrada (Data Inputs): Ej: Solo numeros enteros (sin decimales).\nInformaci√≥n de salida (Outpus): Graficas, figuras, tablas, etc."
  },
  {
    "objectID": "BuenasPracticas.html#puntos-claves-para-buenas-practicas-en-bioinfo",
    "href": "BuenasPracticas.html#puntos-claves-para-buenas-practicas-en-bioinfo",
    "title": "9¬† Buenas practicas",
    "section": "9.5 Puntos claves para buenas practicas en bioinfo ‚≠ê",
    "text": "9.5 Puntos claves para buenas practicas en bioinfo ‚≠ê\n\nEscriba programas para personas, no para computadoras (Documenta qu√© hace y por qu√©). - Se coherente en la nomenclatura, indentaci√≥n y otros aspectos del estilo.\nDivide los programas en funciones cortas de un solo prop√≥sito. üíª üìö\nNo repitas tu c√≥digo. Crea pasos reproducibles o que se repitan por si solas. ‚û∞\nPlanifique los errores (Programacion defensiva) üö©\nOptimice el software s√≥lo despu√©s de que funcione correctamente. - Si funciona no lo modifiques, simplificalo.\nColaborar - Busque siempre bibliotecas de software bien mantenidas que hagan lo que necesita. üë•\n\n\n\n\n\n\n\nEjemplo de como realizo mis documentos üíú\n\n\n\nAqui les dejo el script que les doy a mis alumnos VisualizacionDatos.R del curso de An√°lisis de datos de RNA-Seq."
  },
  {
    "objectID": "BuenasPracticas.html#referencias",
    "href": "BuenasPracticas.html#referencias",
    "title": "9¬† Buenas practicas",
    "section": "9.6 Referencias",
    "text": "9.6 Referencias\n\nHaydee tutorial: Temas Selectos de An√°lisis Num√©rico y Computaci√≥n Cient√≠fica: Computo cient√≠fico para el an√°lisis de datos\nAlejandra Medina tutorial: Control de versiones con GitHub y RStudio\nWilson, et al.¬†2014. Best Practices for Scientific Computing. PLOS Biology\nEvelia Coss - tutorial Buenas practicas en R\nEvelia Coss - Make your CV tutorial"
  },
  {
    "objectID": "Parte4A.html#diferencias-entre-enlaces-simb√≥licos-symlinks-y-enlaces-duros-hard-links",
    "href": "Parte4A.html#diferencias-entre-enlaces-simb√≥licos-symlinks-y-enlaces-duros-hard-links",
    "title": "10¬† Enlaces simb√≥licos (symlinks)",
    "section": "10.1 Diferencias entre enlaces simb√≥licos (symlinks) y enlaces duros (hard links)",
    "text": "10.1 Diferencias entre enlaces simb√≥licos (symlinks) y enlaces duros (hard links)\n\n\n\n\n\n\n\n\nCaracter√≠sticas\nSymlinks\nHard links\n\n\n\n\nAlmacenamiento\n\nAct√∫a como un puntero o referencia a otro archivo o directorio.\nNo contiene los datos reales del archivo, sino una tuta que apunta al archivo original.\n\n\nApunta directamente a los datos del archivo original.\n\n\n\nComparte el mismo contenido que el archivo enlazado, no solo una referencia.\n\n\n\nN√∫mero de inodo\nCuenta con un n√∫mero de inodo (nodo indice) diferente del archivo original. Se identifica como un tipo de archivo diferente.\nComparte el mismo n√∫mero de inodo con el destino. Elimina el concepto de ‚Äúarchivo original‚Äù; todos los hard links al mismo archivo son iguales.\n\n\nEliminaci√≥n del archivo original\nSi el archivo original se elimina, el symlink queda roto (es decir, apunta a algo inexistente).\nSi un hard link se elimina, los datos del archivo permanecen accesibles mientras existan otros hard links.\n\n\nSistema de archivos.\nPuede apuntar a archivos o directorios, incluso en diferentes sistemas de archivos.\nDeben residir en el mismo sistema de archivos.\n\n\nRutas\nSe pueden usar rutas absolutas o relativas para la referencia.\nNo puede enlazar directorios (en la mayor√≠a de los sistemas modernos) ni cruzar sistemas de archivos diferentes.\n\n\nUso com√∫n\n\nCrear accesos directos a archivos o carpetas.\nFacilitar la gesti√≥n de rutas en aplicaciones.\n\n\nGarantizar accesibilidad a datos independientemente de qu√© enlace se elimine.\nCompartir archivos de forma eficiente sin duplicar espacio en disco.\n\n\n\nComando para crear\nln -s archivo_original enlace_simbolico\nln archivo_original enlace_simbolico\n\n\n\n\n\n\n\n\n\nCaution\n\n\n\nDebes tener cuidado al elegir cu√°l utilizar. Los enlaces simb√≥licos son m√°s convenientes cuando trabajamos con datos importantes que est√°n almacenados en un respaldo, ya que permiten acceder f√°cilmente a los archivos originales sin duplicarlos y facilitan la gesti√≥n de rutas, sin eliminar o afectar los archivos originales."
  },
  {
    "objectID": "Parte4A.html#orden-de-los-archivos",
    "href": "Parte4A.html#orden-de-los-archivos",
    "title": "10¬† Enlaces simb√≥licos (symlinks)",
    "section": "10.2 Orden de los archivos",
    "text": "10.2 Orden de los archivos\nEl¬†sistema de archivos de GNU/Linux¬†tiene una estructura jer√°rquica de directorios y subdirectorios que penden del¬†directorio ra√≠z /. Esta estructura puede ser visualizada convenientemente con el comando¬†tree (Nota:¬†tree¬†tal vez no est√© instalado en tu sistema).\nOrganizar tu entorno de trabajo en Bash siguiendo buenas pr√°cticas te permitir√° gestionar tus archivos y scripts de manera eficiente. Aqu√≠ tienes una sugerencia de carpetas clave y nombres que puedes utilizar:\n~/workspace/\n‚îú‚îÄ‚îÄ bin/           # Scripts ejecutables\n‚îú‚îÄ‚îÄ src/           # C√≥digo fuente\n‚îú‚îÄ‚îÄ logs/          # Archivos de registro\n‚îú‚îÄ‚îÄ config/        # Configuraci√≥n\n‚îú‚îÄ‚îÄ data/\n‚îÇ   ‚îú‚îÄ‚îÄ raw/       # Datos crudos\n‚îÇ   ‚îî‚îÄ‚îÄ processed/ # Datos procesados\n‚îú‚îÄ‚îÄ backup/        # Copias de seguridad\n‚îú‚îÄ‚îÄ tmp/           # Archivos temporales\n‚îú‚îÄ‚îÄ projects/\n‚îÇ   ‚îî‚îÄ‚îÄ project_name/\n‚îú‚îÄ‚îÄ git/           # Repositorios locales\n‚îî‚îÄ‚îÄ docs/          # Documentaci√≥n\n\n10.2.1 Consejos adicionales\n\nUsa nombres descriptivos: Los nombres de las carpetas y archivos deben reflejar su contenido claramente.\nMant√©n consistencia: Usa un esquema de nombres uniforme (por ejemplo, todo en min√∫sculas o con guiones bajos).\nAutomatiza la limpieza: Utiliza scripts en Bash para eliminar archivos temporales o rotar logs antiguos.\nUsa control de versiones: Integra Git en tus proyectos para mantener un historial de cambios en tus scripts.\n\nEsta estructura es flexible y se puede ajustar seg√∫n tus necesidades espec√≠ficas."
  },
  {
    "objectID": "Parte4A.html#referencias",
    "href": "Parte4A.html#referencias",
    "title": "10¬† Enlaces simb√≥licos (symlinks)",
    "section": "10.3 Referencias",
    "text": "10.3 Referencias\n\nHow to create and remove Linux symlinks for files and directories\nGeneraci√≥n de ligas simb√≥licas a archivos: comando¬†ln -s /ruta/al/archivo/fuente nombre_liga"
  },
  {
    "objectID": "Parte4B.html#contar-el-n√∫mero-de-secuencias-en-un-archivo-fasta",
    "href": "Parte4B.html#contar-el-n√∫mero-de-secuencias-en-un-archivo-fasta",
    "title": "11¬† Filtrado de texto (grep, cut, sort, uniq, wc)",
    "section": "11.1 Contar el n√∫mero de secuencias en un archivo FASTA",
    "text": "11.1 Contar el n√∫mero de secuencias en un archivo FASTA\n\n¬øCu√°ntas l√≠neas tiene el archivo S_clavuligerus_proteome.fasta?\n\ncd /data/unix.bioinfo.rsgecuador-gh-pages/_files/\nwc -l S_clavuligerus_proteome.fasta\n# 40739 lineas\nEn archivos de formato FASTA o similares, el n√∫mero de l√≠neas no corresponde al n√∫mero de secuencias. Esto se debe a la estructura del archivo:\n\nFormato FASTA: Cada secuencia comienza con una l√≠nea que tiene el s√≠mbolo &gt;, seguido de un identificador o descripci√≥n de la secuencia.\nLas l√≠neas siguientes contienen la secuencia de nucle√≥tidos o amino√°cidos, que pueden estar divididas en varias l√≠neas.\n\nPor lo tanto, para contar el n√∫mero de secuencias en un archivo FASTA, debes contar las l√≠neas que comienzan con &gt;. Aqu√≠ tienes un ejemplo pr√°ctico en Bash para lograrlo:\n\n¬øCu√°ntas secuencias tiene el archivo S_clavuligerus_proteome.fasta?\n\ngrep -c \"^&gt;\" S_clavuligerus_proteome.fasta\n# 6439 secuencias\n\n¬øCu√°les bases de datos detectaron estas secuencias?\n\ngrep \"&gt;\" S_clavuligerus_proteome.fasta | cut -d '|' -f1 | sed 's/&gt;//' | uniq\n# sp y tr\nUniProtKB (Universal Protein Knowledgebase) tiene dos secciones principales:\n\nSwiss-Prot (sp): Contiene secuencias revisadas y anotadas manualmente.\nTrEMBL (tr): Contiene secuencias computacionalmente anotadas y a√∫n no revisadas manualmente.\n\n\n\n\n\n\n\nExplicaci√≥n del c√≥digo\n\n\n\n\ngrep \"&gt;\": Busca la l√≠nea con la cabecera.\ncut -d'|' -f1: Divide por | y selecciona el primer campo.\nsed 's/&gt;//': Elimina el s√≠mbolo &gt; al inicio.\nuniq: Nos da los valores √∫nicos.\n\n\n\n\n¬øQu√© organismo produce esta prote√≠na y cu√°l es su Taxonomy ID?\n\norganism=$(grep \"&gt;\" S_clavuligerus_proteome.fasta | sed -n 's/.*OS=\\([^ ]*\\).*/\\1/p' | sort -u)\ntaxonomy=$(grep \"&gt;\" S_clavuligerus_proteome.fasta | sed -n 's/.*OX=\\([0-9]*\\).*/\\1/p' | sort -u)\necho \"Organismo: $organism\"\necho \"Taxonomy ID: $taxonomy\"\n\n\n\n\n\n\nExplicaci√≥n del c√≥digo\n\n\n\n\nsed -n 's/.*OS=\\([^ ]*\\).*/\\1/p': Extrae el nombre del organismo entre OS= y el primer espacio.\nsed -n 's/.*OX=\\([0-9]*\\).*/\\1/p': Extrae el n√∫mero despu√©s de OX=.\nsort -u: Ordena las l√≠neas y elimina duplicados, asegurando que solo queden valores √∫nicos.\nSe aplica despu√©s de extraer los valores con sed, por si existen m√∫ltiples cabeceras en el archivo.\n\n\n\n\n¬øCu√°ntos genes codifican a estas prote√≠nas?\n\ngrep \"&gt;\" S_clavuligerus_proteome.fasta | sed -n 's/.*GN=\\([^ ]*\\).*/\\1/p' | sort | uniq | wc -l\n# 6410 genes\n\n\n\n\n\n\nExplicaci√≥n del c√≥digo\n\n\n\n\ngrep \"&gt;\" header.fasta: Encuentra las l√≠neas con cabeceras FASTA.\nsed -n 's/.*GN=\\([^ ]*\\).*/\\1/p': Extrae el valor asociado a GN= (el nombre del gen).\nsort: Ordena alfab√©ticamente los nombres de los genes.\nuniq: Filtra y deja solo los nombres √∫nicos.\nwc -l: Cuenta el n√∫mero total de l√≠neas (es decir, el n√∫mero de genes √∫nicos).\n\n\n\n\n¬øQu√© nivel de evidencia tiene la existencia de la prote√≠na TMUUS_STRC2?\n\n\n\n\n\n\n\nNote\n\n\n\nTMUUS_STRC2: Es el nombre de la prote√≠na en formato abreviado y en may√∫sculas.\n\nTMUUS: Abreviatura de la funci√≥n de la prote√≠na: ‚Äú(+)-T-muurolol synthase‚Äù.\nSTRC2: Abreviatura del organismo de origen, Streptomyces clavuligerus.\n\n\n\nEl nivel de evidencia de la existencia de la prote√≠na TMUUS_STRC2 est√° especificado en la cabecera FASTA mediante el campo PE. En este caso: &gt;sp|B5GW45|TMUUS_STRC2 (+)-T-muurolol synthase ((2E,6E)-farnesyl diphosphate cyclizing) OS=Streptomyces clavuligerus OX=443255 GN=SCLAV_p0068 PE=1 SV=1\nEl campo PE=1 indica que el nivel de evidencia es 1, lo que significa que la existencia de esta prote√≠na est√° confirmada experimentalmente.\nInterpretaci√≥n de PE (Protein Existence) en UniProt:\n\nPE=1: Evidencia experimental a nivel de prote√≠na.\nPE=2: Evidencia experimental a nivel de transcripci√≥n.\nPE=3: Inferido por homolog√≠a.\nPE=4: Predicho.\nPE=5: Prote√≠na no existente.\n\nEn Bash:\ngrep \"&gt;.*TMUUS_STRC2\" S_clavuligerus_proteome.fasta | sed -n 's/.*PE=\\([0-9]\\).*/\\1/p'\nPor lo tanto, TMUUS_STRC2 tiene el nivel m√°s alto de evidencia (PE=1), lo que confirma su existencia a nivel experimental.\n\n\n\n\n\n\nEjercicio 8\n\n\n\nContesta las siguientes preguntas empleando el archivo S_clavuligerus_proteome.fasta:\n\n¬øQu√© prote√≠nas tienen un nivel de evidencia menor o igual a 2?\n¬øCu√°ntas prote√≠nas tienen el identificador de taxonom√≠a (OX=443255) espec√≠fico?\n¬øCu√°ntas variantes de secuencia (SV, sequence version) diferentes hay en el archivo FASTA?\n\n\n\n\n\n\n\nSolucion\n\n\n\n\n\n1. grep \"&gt;\" S_clavuligerus_proteome.fasta | grep \"PE=[1-2]\"\n2. grep \"OX=443255\"  S_clavuligerus_proteome.fasta | wc -l\n3. grep \"&gt;\"  S_clavuligerus_proteome.fasta | grep -o \"SV=[0-9]*\" | cut -d'=' -f2 | sort | uniq -c"
  },
  {
    "objectID": "Parte4B.html#referencias",
    "href": "Parte4B.html#referencias",
    "title": "11¬† Filtrado de texto (grep, cut, sort, uniq, wc)",
    "section": "11.2 Referencias",
    "text": "11.2 Referencias\n\nEjemplos de herramientas de filtrado de texto:¬†pipelines¬†con¬†grep,¬†cut,¬†sort,¬†uniq,¬†wc¬†en acci√≥n"
  },
  {
    "objectID": "Parte5.html#ejercicio-10-edici√≥n-de-archivos---por-crear",
    "href": "Parte5.html#ejercicio-10-edici√≥n-de-archivos---por-crear",
    "title": "12¬† Condicionales",
    "section": "12.1 Ejercicio 10: Edici√≥n de archivos - Por crear",
    "text": "12.1 Ejercicio 10: Edici√≥n de archivos - Por crear"
  },
  {
    "objectID": "Parte5.html#referencias",
    "href": "Parte5.html#referencias",
    "title": "12¬† Condicionales",
    "section": "12.2 Referencias",
    "text": "12.2 Referencias\n\nDataCarpentry For Loops",
    "crumbs": [
      "**Section 5** - Condicionales",
      "<span class='chapter-number'>12</span>¬† <span class='chapter-title'>Condicionales</span>"
    ]
  },
  {
    "objectID": "Parte6.html#actividad-grupal",
    "href": "Parte6.html#actividad-grupal",
    "title": "13¬† Scripts en Bash",
    "section": "13.1 Actividad grupal",
    "text": "13.1 Actividad grupal\nPaso 1. Crear un script en Bash con el nombre demo.sh empleando nano.\nnano demo.sh\nPaso 2. Copia el siguiente c√≥digo dentro del script demo.sh y guarda los cambios.\n\n#!/bin/bash\n# File: demo.sh\n\n# Input de archivo\n# 2. Mostrar el archivo y n√∫mero de argumentos\necho \"Archivo a procesar &gt; $@\"\necho \"Numero de argumentos: $#\"\n\n# 3. Conteo de secuencias y separaci√≥n de malas lecturas\nnumero_secuencias=$(grep -c '^@SRR098026' $@)\ngrep -B1 -A2 NNNNNNNNNN $@ &gt; malas_lecturas.fastq\nmalas=$(cat malas_lecturas.fastq | wc -l)\necho \"N√∫mero de malas lecturas: $malas\"\n\n# 4. B√∫squeda de patrones\necho \"Desea buscar patrones (y/n): \"\nread d\n\nif [[ $d == \"y\" ]]; then\n    echo \"Los patrones se guardar√°n en: patrones.txt\"\n    echo -e 'ACTG\\nCCCCC\\nNNNCNNN\\nNNNGNNN\\nTTTT\\nTATA\\nAAA' &gt; patrones.txt\n    grep -f patrones.txt $@ &gt; busqueda.txt\n    echo \"B√∫squeda de patrones guardada en: busqueda.txt\"\nelse\n    echo \"ok :P\"\nfi\n\n# Mensaje final\necho \"Fin :)\"\n\n\n\n\n\n\nExplicaci√≥n del c√≥digo\n\n\n\n\n\n\n1. Comentarios y declaraci√≥n de archivo\n#!/bin/bash: Indica que el script se ejecutar√° usando el int√©rprete de Bash.\n# File: demo.sh: Un comentario que indica el nombre del archivo del script.\n2. Mostrar el archivo y n√∫mero de argumentos\necho \"Archivo a procesar &gt; $@\": Muestra el nombre del archivo que se pasar√° como argumento al script. $@ representa todos los argumentos pasados al script.\necho \"Numero de argumentos: $#\": Muestra cu√°ntos argumentos ha recibido el script. $# indica el n√∫mero de argumentos.\n3. Contar secuencias y separar malas lecturas\nnumero_secuencias=$(grep -c '^@SRR098026' $@): Usa grep para contar cu√°ntas secuencias empiezan con @SRR098026 en el archivo (probablemente sea un prefijo en un archivo FASTQ que identifica secuencias de inter√©s). -c cuenta las coincidencias.\ngrep -B1 -A2 NNNNNNNNNN $@ &gt; malas_lecturas.fastq: Busca secuencias de calidad baja o problem√°ticas (que contengan 10 nucle√≥tidos seguidos de N, que representan bases no determinadas).\n\n-B1: Muestra 1 l√≠nea antes de cada coincidencia de NNNNNNNNNN.\n-A2: Muestra 2 l√≠neas despu√©s de la coincidencia.\nEl resultado se guarda en un archivo llamado malas_lecturas.fastq.\n\nmalas=$(cat malas_lecturas.fastq | wc -l): Cuenta el n√∫mero total de l√≠neas en malas_lecturas.fastq (esto indica la cantidad de malas lecturas encontradas).\necho \"N√∫mero de malas lecturas: $malas\": Muestra la cantidad de malas lecturas encontradas\necho \"Numero de argumentos: $#\": Muestra cu√°ntos argumentos ha recibido el script. $# indica el n√∫mero de argumentos.\n4. B√∫squeda de patrones\necho \"Desea buscar patrones (y/n): \": Pregunta al usuario si desea buscar patrones espec√≠ficos en el archivo.\nread d: Lee la respuesta del usuario y la guarda en la variable d.\nif [[ $d == \"y\" ]]; then: Si la respuesta es ‚Äúy‚Äù (s√≠), el script procede a buscar los patrones.\n\necho -e 'ACTG\\nCCCCC\\nNNNCNNN\\nNNNGNNN\\nTTTT\\nTATA\\nAAA' &gt; patrones.txt: Crea un archivo patrones.txt que contiene una lista de secuencias de inter√©s (patrones a buscar).\ngrep -f patrones.txt $@ &gt; busqueda.txt: Busca los patrones contenidos en patrones.txt dentro del archivo de entrada. El resultado de la b√∫squeda se guarda en busqueda.txt.\necho \"B√∫squeda de patrones guardada en: busqueda.txt\": Informa al usuario que los resultados de la b√∫squeda se guardaron en el archivo busqueda.txt.\n\nelse: Si la respuesta es ‚Äún‚Äù (no), simplemente muestra un mensaje.\n\n\n\n\nEste c√≥digo realizar√° las siguientes instrucciones:\n\nTomar√° como input el nombre del archivo ./_files/secuencias_bash.fastq de secuencias fastq para analizar.\nBuscar√° dentro del archivo provisto por el usuario las secuencias con el string @SRR098026 y las contar√°.\nExportar√° las malas secuencias a un archivo llamado malas_lecturas.fastq, usando el string ‚ÄúNNNNNNNNNN‚Äù como plantilla.\nReportar√° el n√∫mero de malas secuencias.\nLuego buscaremos patrones en el archivo buenas_lecturas.fastq, si es que el usuario lo desea.\n\nPaso 3. Deber√≠as correr el script as√≠, una vez que hayas descargado el archivo¬†secuencias_bash.fastq:\nbash demo.sh secuencias_bash.fastq"
  },
  {
    "objectID": "Parte6.html#material-suplementario",
    "href": "Parte6.html#material-suplementario",
    "title": "13¬† Scripts en Bash",
    "section": "13.2 Material suplementario",
    "text": "13.2 Material suplementario\n\nRSG Ecuador. Scripts en Bash\nRSG Ecuador. Wildcards y Streams\nRSG Ecuador. Expresiones regulares (regex)\nWildcard Selection in Bash"
  },
  {
    "objectID": "Parte7.html#ejercicio-10",
    "href": "Parte7.html#ejercicio-10",
    "title": "14¬† Bucles (for loops)",
    "section": "14.1 Ejercicio 10",
    "text": "14.1 Ejercicio 10"
  },
  {
    "objectID": "Parte7.html#referencias",
    "href": "Parte7.html#referencias",
    "title": "14¬† Bucles (for loops)",
    "section": "14.2 Referencias",
    "text": "14.2 Referencias\n\nSWCarpentry: Loops",
    "crumbs": [
      "**Section 6** - Bucles (for loops)",
      "<span class='chapter-number'>14</span>¬† <span class='chapter-title'>Bucles (for loops)</span>"
    ]
  },
  {
    "objectID": "Parte8.html#extracci√≥n-de-informaci√≥n-de-archivos-fastq",
    "href": "Parte8.html#extracci√≥n-de-informaci√≥n-de-archivos-fastq",
    "title": "15¬† Ejercicios en equipo",
    "section": "",
    "text": "Note\n\n\n\nEs posible realizar esto con un comando de una sola l√≠nea, intenta resolverlo de esta forma.\n\n\n\n\n\n\n\n\nSoluci√≥n\n\n\n\n\n\n# cd C:/Users/ecoss/Documents/Respaldos/Github_notes/Workshop_Bash2024/data/unix.bioinfo.rsgecuador-gh-pages\n\n#!/bin/bash\n# File: countseq.sh\n\n# Ruta a la carpeta que contiene los archivos .fastq\nFOLDER=\"_files\"\n\n# Iterar sobre cada archivo .fastq en la carpeta\nfor file in \"$FOLDER\"/*[1-3].fastq; do\n  # Imprimir el nombre del archivo\n  echo \"Archivo: $file\"\n  \n  # Usar grep para buscar secuencias que contengan 10 'N' seguidas y contar cu√°ntas veces aparecen\n  count=$(grep -c 'NNNNNNNNNN' $file )\n  \n  # Imprimir el n√∫mero de secuencias encontradas\n  echo \"N√∫mero de secuencias con 10 N seguidas: $count\"\n  echo \"---------------------------------------\"\ndone\nRecuerda para ejecutar este codigo deberas encontrarte dentro de la carpeta descomprimida unix.bioinfo.rsgecuador-gh-pages/y ejecutar: ./countseq.sh.\nSalida:\n\nsecuencias1.fastq - 1\nsecuencias2.fastq - 58\nsecuencias3.fastq - 75\n\n\n\n\n\n\n\n\n\n\n\n\nSoluci√≥n\n\n\n\n\n\n#!/bin/bash\n# File: countNseq.sh\n\n# Ruta a la carpeta que contiene los archivos .fastq\nFOLDER=\"_files\"\n\n# Iterar sobre cada archivo .fastq en la carpeta\nfor file in \"$FOLDER\"/*[1-3].fastq; do\n  echo \"Archivo: $file\"\n  \n  # Usar grep para contar cu√°ntas l√≠neas empiezan con '@SRR098026'\n  count=$(grep -c '^@SRR098026' $file )\n  \n  echo \"N√∫mero de secuencias: $count\"\n  echo \"---------------------------------------\"\ndone\nSalida:\n\nsecuencias1.fastq - 99\nsecuencias2.fastq - 75\nsecuencias3.fastq - 75\n\n\n\n\n\n\n\n\n\n\n\n\nPista\n\n\n\nUsa herramientas como grep y un script auxiliar para convertir los s√≠mbolos ASCII a valores num√©ricos y calcular su promedio.\n\n\n\n\n\n\n\n\nSoluci√≥n\n\n\n\n\n\n# Umbral de calidad\numbral=20\n\n# Extraer las l√≠neas de calidad (cuarta l√≠nea de cada entrada)\ngrep -A 3 \"^@\" *.fastq | grep -v \"^@\" | grep -v \"+\" &gt; quality_lines.txt\n\n# Convertir las l√≠neas de calidad ASCII a n√∫meros, calcular el promedio, y contar las que sean menores al umbral\ncat quality_lines.txt | while read line; do\n  # Convertir caracteres ASCII a valores num√©ricos y calcular la calidad promedio\n  sum=0\n  count=0\n  for i in $(echo \"$line\" | od -An -t u1); do\n    sum=$((sum + i - 33))  # Restar 33 para convertir de ASCII a valor de calidad\n    count=$((count + 1))\n  done\n\n  # Calcular la calidad promedio\n  if [ \"$count\" -gt 0 ]; then\n    calidad=$((sum / count))  # Calcular el promedio sin necesidad de bc\n  else\n    calidad=0\n  fi\n\n  # Comprobar si la calidad es menor que el umbral y almacenar\n  if [ \"$calidad\" -lt \"$umbral\" ]; then\n    echo \"$calidad\" &gt;&gt; low_quality_sequences.txt\n  fi\ndone\n\n# Contar secuencias con calidad promedio menor al umbral\necho \"N√∫mero de secuencias con calidad promedio &lt; $umbral: $(wc -l &lt; low_quality_sequences 20: 757\nN√∫mero de secuencias con calidad promedio &lt; 20: 757\n\n\n\n\n\n\n\n\n\n\n\nPista\n\n\n\nUsa grep para extraer solo las l√≠neas correspondientes a las secuencias y despu√©s sort y uniq para contarlas.\n\n\n\n\n\n\n\n\nSolucion\n\n\n\n\n\n# Extraer solo las secuencias (segunda l√≠nea de cada entrada)\ngrep -A 3 \"^@\" *.fastq | grep -v \"^@\" | grep -v \"+\" | grep -v \"^--$\" &gt; sequences_only.txt\n\n# Contar las secuencias √∫nicas\necho \"N√∫mero de secuencias √∫nicas: $(sort sequences_only.txt | uniq | wc -l)\"\nN√∫mero de secuencias √∫nicas: 620\n\n\n\n\n\n\n\n\n\n\n\nPista\n\n\n\nExtrae las l√≠neas correspondientes a las secuencias y utiliza wc -c para sumar los caracteres, luego divide por el n√∫mero de secuencias.\n\n\n\n\n\n\n\n\nSolucion\n\n\n\n\n\n# calcular_longitud_promedio.sh\n# Extraer solo las secuencias (segunda l√≠nea de cada entrada)\ngrep -A 3 \"^@\" *.fastq | grep -v \"^@\" | grep -v \"+\" | grep -v \"^--$\" &gt; sequences_only.txt\n\n# Calcular la longitud total de las secuencias\ntotal_length=0\nwhile read -r sequence; do\n  total_length=$((total_length + ${#sequence}))\ndone &lt; sequences_only.txt\n\n# Contar el n√∫mero total de secuencias\nnum_sequences=$(wc -l &lt; sequences_only.txt)\n\n# Calcular la longitud promedio\nif [ \"$num_sequences\" -gt 0 ]; then\n  average_length=$((total_length / num_sequences))\nelse\n  average_length=0\nfi\n\necho \"Longitud promedio de las secuencias: $average_length\"\nLongitud promedio de las secuencias: 58\n\n\n\n\n\n\n\n\n\n\n\nPista\n\n\n\nExtrae las l√≠neas correspondientes a las secuencias y utiliza wc -c para sumar los caracteres, luego divide por el n√∫mero de secuencias.\n\n\n\n\n\n\n\n\nSolucion\n\n\n\n\n\n#!/bin/bash\n\n# Archivo de entrada\narchivo=\"secuencias1.fastq\"\n\n# Inicializar contadores\ntotal_bases=0\ntotal_gc=0\n\n# Leer el archivo l√≠nea por l√≠nea\ncontador=0\nwhile IFS= read -r linea; do\n  ((contador++))\n\n  # Procesar solo l√≠neas de secuencias (segunda l√≠nea de cada bloque de 4)\n  if ((contador % 4 == 2)); then\n    # Contar bases G y C\n    gc=$(echo \"$linea\" | grep -o '[GC]' | wc -l)\n    bases=$(echo -n \"$linea\" | wc -c)\n\n    # Actualizar contadores\n    total_gc=$((total_gc + gc))\n    total_bases=$((total_bases + bases))\n  fi\ndone &lt; \"$archivo\"\n\n# Calcular porcentaje de GC\nif ((total_bases &gt; 0)); then\n  porcentaje_gc=$(echo \"scale=2; $total_gc / $total_bases * 100\" | bc)\n  echo \"Porcentaje de GC en $archivo: $porcentaje_gc%\"\nelse\n  echo \"Error: No se encontraron secuencias en $archivo.\"\nfi\nPorcentaje de GC en secuencias1.fastq: 27.00%\n\n\n\n\n\n\n\n\n\n\n\nSolucion\n\n\n\n\n\n#!/bin/bash\n\n# Directorio donde est√°n los archivos FASTQ\ndirectorio=\"$HOME/unix.bioinfo.rsgecuador-gh-pages/_files\"\n\n# Loop para procesar cada archivo FASTQ\nfor archivo in \"$directorio\"/*.fastq; do\n  if [ -f \"$archivo\" ]; then\n    echo \"Procesando archivo: $archivo\"\n\n    # Inicializar contadores\n    total_bases=0\n    gc_bases=0\n\n    # Leer el archivo l√≠nea por l√≠nea\n    contador=0\n    while IFS= read -r linea; do\n      ((contador++))\n      \n      # Solo procesamos las l√≠neas de secuencias (segunda l√≠nea de cada bloque)\n      if ((contador % 4 == 2)); then\n        # Contamos las bases G y C\n        gc_bases=$((gc_bases + $(echo \"$linea\" | grep -o 'G' | wc -l) + $(echo \"$linea\" | grep -o 'C' | wc -l)))\n        total_bases=$((total_bases + ${#linea}))\n      fi\n    done &lt; \"$archivo\"\n\n    # Calculamos el porcentaje de GC\n    if [ \"$total_bases\" -gt 0 ]; then\n      porcentaje_gc=$((gc_bases * 100 / total_bases))\n      echo \"Porcentaje de GC en $archivo: $porcentaje_gc%\"\n    else\n      echo \"No se encontraron secuencias v√°lidas en $archivo.\"\n    fi\n  else\n    echo \"El archivo $archivo no existe.\"\n  fi\ndone\nProcesando archivo: secuencias1.fastq: 27% Procesando archivo: secuencias2.fastq: 11% Procesando archivo: secuencias3.fastq: 2% Procesando archivo: secuencias_bash.fastq: 2%\n\n\n\n\n\n\n\n\n\n\n\nSolucion\n\n\n\n\n\n#!/bin/bash\n\n# Archivo de entrada\narchivo=\"secuencias1.fastq\"\n\n# Inicializar contadores\nconteo_A=0\nconteo_T=0\nconteo_G=0\nconteo_C=0\nconteo_N=0\n\n# Leer el archivo l√≠nea por l√≠nea\ncontador=0\nwhile IFS= read -r linea; do\n  ((contador++))\n\n  # Procesar solo l√≠neas de secuencias (segunda l√≠nea de cada bloque de 4)\n  if ((contador % 4 == 2)); then\n    conteo_A=$((conteo_A + $(echo -n \"$linea\" | grep -o 'A' | wc -l)))\n    conteo_T=$((conteo_T + $(echo -n \"$linea\" | grep -o 'T' | wc -l)))\n    conteo_G=$((conteo_G + $(echo -n \"$linea\" | grep -o 'G' | wc -l)))\n    conteo_C=$((conteo_C + $(echo -n \"$linea\" | grep -o 'C' | wc -l)))\n    conteo_N=$((conteo_N + $(echo -n \"$linea\" | grep -o 'N' | wc -l)))\n  fi\ndone &lt; \"$archivo\"\n\n# Mostrar resultados\necho \"Contenido de bases en $archivo:\"\necho \"A: $conteo_A\"\necho \"T: $conteo_T\"\necho \"G: $conteo_G\"\necho \"C: $conteo_C\"\necho \"N: $conteo_N\"\nContenido de bases en secuencias1.fastq:\nA: 643 T: 450 G: 494 C: 470 N: 1408\n\n\n\n\n\n\n\n\n\n\n\nSolucion\n\n\n\n\n\n#!/bin/bash\n\n# Archivo FASTQ\narchivo=\"secuencias1.fastq\"\n\n# Inicializar array para almacenar las longitudes de las secuencias\ndeclare -a longitudes\n\n# Leer el archivo l√≠nea por l√≠nea\ncontador=0\nwhile IFS= read -r linea; do\n  ((contador++))\n\n  # Solo procesamos las l√≠neas de secuencias (segunda l√≠nea de cada bloque)\n  if ((contador % 4 == 2)); then\n    # Obtener la longitud de la secuencia\n    longitudes+=(${#linea})\n  fi\ndone &lt; \"$archivo\"\n\n# Verificar si se encontraron secuencias\nif [ ${#longitudes[@]} -eq 0 ]; then\n  echo \"No se encontraron secuencias v√°lidas en el archivo.\"\n  exit 1\nfi\n\n# Calcular la distribuci√≥n de longitudes\necho \"Distribuci√≥n de longitudes de las secuencias:\"\n\n# Calcular la frecuencia de cada longitud de secuencia\nfor i in \"${longitudes[@]}\"; do\n  ((longitud_frecuencia[$i]++))\ndone\n\n# Mostrar la distribuci√≥n de longitudes\nfor longitud in \"${!longitud_frecuencia[@]}\"; do\n  echo \"Longitud $longitud: ${longitud_frecuencia[$longitud]} secuencias\"\ndone\nProcesando el archivo: secuencias1.fastq Distribuci√≥n de longitudes de las secuencias: Longitud 35: 99 secuencias\n\n\n\n\n\n\n\n\n\n\n\nSolucion\n\n\n\n\n\n#!/bin/bash\n\n# Directorio donde se encuentran los archivos FASTQ\ndirectorio=\"$HOME/unix.bioinfo.rsgecuador-gh-pages/_files\"\n\n# Loop para procesar cada archivo FASTQ\nfor archivo in \"$directorio\"/*.fastq; do\n  if [ -f \"$archivo\" ]; then\n    echo \"Procesando archivo: $archivo\"\n\n    # Inicializar contador de longitudes\n    longitudes=()\n\n    # Leer el archivo l√≠nea por l√≠nea\n    contador=0\n    while IFS= read -r linea; do\n      ((contador++))\n      \n      # Solo procesamos las l√≠neas de secuencias (segunda l√≠nea de cada bloque)\n      if ((contador % 4 == 2)); then\n        # Agregar la longitud de la secuencia al array\n        longitudes+=(${#linea})\n      fi\n    done &lt; \"$archivo\"\n\n    # Calcular la distribuci√≥n de longitudes\n    echo \"Distribuci√≥n de longitudes para $archivo:\"\n    for longitud in \"${longitudes[@]}\"; do\n      echo -n \"$longitud \"  # Imprimir todas las longitudes\n    done\n\n    echo -e \"\\nN√∫mero total de secuencias: ${#longitudes[@]}\"\n\n    # Opcional: generar un histograma (puedes ajustarlo seg√∫n el rango de longitudes)\n    echo \"Histograma de longitudes de secuencias:\"\n    for longitud in \"${longitudes[@]}\"; do\n      echo \"$longitud\"\n    done | sort | uniq -c | sort -n  # Ordena y cuenta las frecuencias\n\n  else\n    echo \"El archivo $archivo no existe.\"\n  fi\ndone\nLa respuesta es:",
    "crumbs": [
      "<span class='chapter-number'>15</span>¬† <span class='chapter-title'>Ejercicios en equipo</span>"
    ]
  },
  {
    "objectID": "Parte8.html#material-suplementario",
    "href": "Parte8.html#material-suplementario",
    "title": "15¬† Ejercicios en equipo",
    "section": "15.2 Material suplementario",
    "text": "15.2 Material suplementario\n\nRSG Ecuador. Scripts en Bash\nRSG Ecuador. Wildcards y Streams\nRSG Ecuador. Expresiones regulares (regex)\nWildcard Selection in Bash",
    "crumbs": [
      "<span class='chapter-number'>15</span>¬† <span class='chapter-title'>Ejercicios en equipo</span>"
    ]
  },
  {
    "objectID": "Parte3B.html",
    "href": "Parte3B.html",
    "title": "8¬† Edici√≥n de archivos con el editor de flujo sed",
    "section": "",
    "text": "Ejemplo de sustituci√≥n con sed\nSustituciones s/// de palabras: s/esto/aquello/\nEn el ejemplo anterior, la modificaci√≥n se hace solamente en la primer instancia que el comando encuentra. Esto no nos funciona si tenemos 400 repeticiones de Windows que queremos cambiar a Linux. Para que funcione debemos hacer un cambio de la siquiente manera:\nEsta letra g que agregamos, indica hacer las sustituciones de manera global, es decir en todas las ocurrencias o repeticiones dentro de un archivo.",
    "crumbs": [
      "**Section 3** - Edici√≥n de archivos",
      "<span class='chapter-number'>8</span>¬† <span class='chapter-title'>Edici√≥n de archivos con el editor de flujo `sed`</span>"
    ]
  },
  {
    "objectID": "Parte3B.html#ejercicio-7-edici√≥n-de-archivos",
    "href": "Parte3B.html#ejercicio-7-edici√≥n-de-archivos",
    "title": "8¬† Edici√≥n de archivos con el editor de flujo sed",
    "section": "",
    "text": "sed [-n] [-e'script'] [-f archivo] archivo1 archivo2 ...\n\n-n indica que se suprima la salida est√°ndar. -e indica que se ejecute el script que viene a continuaci√≥n. Si no se emplea la opci√≥n -f se puede omitir -e. -f indica que las √≥rdenes se tomar√°n de un archivo\n\nEjemplo de sustituci√≥n con sed\nSustituciones s/// de palabras: s/esto/aquello/\nsed 's/Windows/Linux/' archivo\nEn el ejemplo anterior, la modificaci√≥n se hace solamente en la primer instancia que el comando encuentra. Esto no nos funciona si tenemos 400 repeticiones de Windows que queremos cambiar a Linux. Para que funcione debemos hacer un cambio de la siquiente manera:\nsed 's/Windows/Linux/g' archivo\nEsta letra g que agregamos, indica hacer las sustituciones de manera global, es decir en todas las ocurrencias o repeticiones dentro de un archivo.",
    "crumbs": [
      "**Section 3** - Edici√≥n de archivos",
      "<span class='chapter-number'>8</span>¬† <span class='chapter-title'>Edici√≥n de archivos con el editor de flujo `sed`</span>"
    ]
  },
  {
    "objectID": "Parte3B.html#ejercicio-6-pr√°ctica-de-sustituciones",
    "href": "Parte3B.html#ejercicio-6-pr√°ctica-de-sustituciones",
    "title": "8¬† Edici√≥n de archivos con el editor de flujo sed",
    "section": "8.1 Ejercicio 6: Pr√°ctica de sustituciones",
    "text": "8.1 Ejercicio 6: Pr√°ctica de sustituciones\nSi nos situamos dentro de la carpeta ‚Äú~/unix.bioinfo.rsgecuador-gh-pages/_files‚Äù podremos encontrar el archivo ‚Äúnotas.txt‚Äù. Explora este archivo y sustituye la palabra ‚ÄúNotas‚Äù de cada una de las columnas por la palabra ‚ÄúColumna‚Äù. Una vez hecho el cambio redirige el resultado a un archivo llamado ‚Äúcolumnas.txt‚Äù. Corrobora tus resultados y discute posibles soluciones alternas.\n\n\n\n\n\n\nSoluci√≥n\n\n\n\n\n\nLeemos el archivo:\ncat notas.txt \no\nless notas.txt\nSustituimos Notas por Columnas y redirigimos el resultado a otro archivo\nsed 's/Notas/columnas/g' notas.txt &gt;&gt; columnas.txt\n\n8.2",
    "crumbs": [
      "**Section 3** - Edici√≥n de archivos",
      "<span class='chapter-number'>8</span>¬† <span class='chapter-title'>Edici√≥n de archivos con el editor de flujo `sed`</span>"
    ]
  },
  {
    "objectID": "intro.html",
    "href": "intro.html",
    "title": "2¬† Conceptos Unix y GNU/Linux",
    "section": "",
    "text": "2.1 ¬øQu√© es UNIX?",
    "crumbs": [
      "**Section 1** - Introducci√≥n a Bash",
      "<span class='chapter-number'>2</span>¬† <span class='chapter-title'>Conceptos Unix y GNU/Linux</span>"
    ]
  },
  {
    "objectID": "Parte3A.html",
    "href": "Parte3A.html",
    "title": "7¬† Edici√≥n de archivos con los editores de texto (nano y vim)",
    "section": "",
    "text": "Nano\nPara utilizar nano, debemos de seguir una serie de comandos. Primero creamos/leemos nuestro archivo.\nEsto nos crear√° un archivo de texto al que podemos ingresar informaci√≥n y adem√°s nos va desplegar un men√∫ de opciones en la parte inferior de nuestra terminal.\nPara utilizar estas opciones se usan shorchuts o atajos en el teclado, en las que el s√≠mbolo¬†^¬†significa la tecla¬†Control¬†o¬†Command¬†y la¬†M¬†es la tecla¬†Alt. En nuestro caso donde queremos agregar texto, simplemente escribimos\nEste es un archivo de prueba creado con nano.\nPara guardar los cambios en el archivo presionamos control + x, el programa nos desplegar√° un mensaje para guardar el archivo. Presionamos enter y ahora podemos verificar el contenido.",
    "crumbs": [
      "**Section 3** - Edici√≥n de archivos",
      "<span class='chapter-number'>7</span>¬† <span class='chapter-title'>Edici√≥n de archivos con los editores de texto (nano y vim)</span>"
    ]
  },
  {
    "objectID": "Parte5.html",
    "href": "Parte5.html",
    "title": "12¬† Condicionales",
    "section": "",
    "text": "12.1 Condicionales\nLas condicionales son estructuras de programaci√≥n que nos permiten tomar decisiones basadas en el resultado de una expresi√≥n. En otras palabras, nos permiten ejecutar diferentes bloques de c√≥digo dependiendo de si una condici√≥n se cumple o no. Los condicionales son fundamentales para automatizar tareas y crear scripts fl√©xibles.\nLa sint√°xis b√°sica de un condicional simple en formato de una l√≠nea es :\nde igual manera pero en bloque identado:\nQueremos verificar si existe el archivo ‚Äúsecuencias1.fastq‚Äù antes de realizar alguna operaci√≥n sobre √©l. Puedes usar el siguiente condicional:\nLos condicionales pueden ser tan complejos como lo imagines. Por ejemplo:\nExplicaci√≥n del c√≥digo:\nEn donde:",
    "crumbs": [
      "**Section 5** - Condicionales",
      "<span class='chapter-number'>12</span>¬† <span class='chapter-title'>Condicionales</span>"
    ]
  },
  {
    "objectID": "Parte5.html#condicionales",
    "href": "Parte5.html#condicionales",
    "title": "12¬† Condicionales",
    "section": "",
    "text": "if [ condici√≥n ]; then orden1; orden2 ‚Ä¶; fi\n\nif [ condici√≥n ]; then      orden1     orden2  fi\n\nif [ -f secuencias1.fastq ]; then\n  echo \"El archivo existe.\"\nelse\n  echo \"El archivo no existe.\"\nfi\n\nif [ -f secuencias1.fastq ]: Verifica si ‚Äúsecuencias1.fastq‚Äù es un archivo regular.\n\n\n\nthen: Si la condici√≥n es verdadera, se ejecuta el c√≥digo siguiente.\n\n\n\nelse: Si la condici√≥n es falsa, se ejecuta el c√≥digo siguiente.\n\n\n\nfi: Indica el final de la estructura if.\n\n\nfor archivo in $file*.fastq; do \n  if [ -f \"$archivo\" ]; then \n    echo \"Procesando archivo: $archivo\"\n    wc -l \"$archivo\" \n  else \n    echo \"El archivo $archivo no existe o no es un archivo regular\"\n  fi \ndone",
    "crumbs": [
      "**Section 5** - Condicionales",
      "<span class='chapter-number'>12</span>¬† <span class='chapter-title'>Condicionales</span>"
    ]
  },
  {
    "objectID": "Parte7.html",
    "href": "Parte7.html",
    "title": "14¬† Bucles (for loops)",
    "section": "",
    "text": "14.1 Ejercicio grupal\nRetomando el ejercicio anterior, modifiquemos el c√≥digo para crear un bucle para procesar los tres archivos fastq que tenemos.\nPaso 1. Crear un script en Bash con el nombre bucles.sh empleando nano.\nPaso 2. Copia el siguiente c√≥digo dentro del script bucle.sh y guarda los cambios.",
    "crumbs": [
      "**Section 6** - Bucles (for loops)",
      "<span class='chapter-number'>14</span>¬† <span class='chapter-title'>Bucles (for loops)</span>"
    ]
  },
  {
    "objectID": "Parte7.html#ejercicio-grupal",
    "href": "Parte7.html#ejercicio-grupal",
    "title": "14¬† Bucles (for loops)",
    "section": "",
    "text": "nano bucles.sh\n\n#!/bin/bash\n# Script para analizar m√∫ltiples archivos FASTA\n\n# Archivos a procesar\narchivos=(\"archivo1.fasta\" \"archivo2.fasta\" \"archivo3.fasta\")\n\n# Loop para analizar cada archivo\nfor archivo in \"${archivos[@]}\"; do\n  echo \"Archivo a procesar: $archivo\"\n  \n  # Verifica si el archivo existe\n  if [ ! -f \"$archivo\" ]; then\n    echo \"El archivo $archivo no existe. Saltando...\"\n    continue\n  fi\n\n  # 1. Conteo de secuencias\n  numero_secuencias=$(grep -c '^@SRR098026' \"$archivo\")\n  echo \"N√∫mero de secuencias en $archivo: $numero_secuencias\"\n\n  # 2. Separaci√≥n de malas lecturas\n  grep -B1 -A2 'NNNNNNNNNN' \"$archivo\" &gt; \"malas_lecturas_$archivo\"\n  malas=$(wc -l &lt; \"malas_lecturas_$archivo\")\n  echo \"N√∫mero de malas lecturas en $archivo: $malas\"\n\n  # 3. B√∫squeda de patrones\n  echo \"Desea buscar patrones en $archivo? (y/n):\"\n  read -r respuesta\n\n  if [[ \"$respuesta\" == \"y\" ]]; then\n    patrones_file=\"patrones_$archivo.txt\"\n    busqueda_file=\"busqueda_$archivo.txt\"\n\n    echo -e 'ACTG\\nCCCCC\\nNNNCNNN\\nNNNGNNN\\nTTTT\\nTATA\\nAAA' &gt; \"$patrones_file\"\n    grep -f \"$patrones_file\" \"$archivo\" &gt; \"$busqueda_file\"\n\n    echo \"B√∫squeda de patrones guardada en: $busqueda_file\"\n  else\n    echo \"Patrones no buscados en $archivo.\"\n  fi\n\n  echo \"Procesamiento de $archivo completado.\"\n  echo \"---------------------------------------\"\ndone\n\n# Mensaje final\necho \"Metan√°lisis finalizado para todos los archivos.\"",
    "crumbs": [
      "**Section 6** - Bucles (for loops)",
      "<span class='chapter-number'>14</span>¬† <span class='chapter-title'>Bucles (for loops)</span>"
    ]
  },
  {
    "objectID": "Parte8.html",
    "href": "Parte8.html",
    "title": "15¬† Ejercicios en equipo",
    "section": "",
    "text": "15.1 Extracci√≥n de informaci√≥n de archivos fastq\nEn este ejercicio se obtendr√° informaci√≥n de archivos fastq, que cotienen secuencias de nucle√≥tidos y la calidad de su proceso de secuenciaci√≥n. Para esto usaremos los archivos secuencias1.fastq, secuencias2.fastq y secuencias3.fastq que se encuentra en la carpeta _files dentro del directorio ra√≠z del repositorio de GitHub unix.bioinfo.rsgecuador .\nEjercicio 13.1 Contar el n√∫mero de secuencias con diez ‚ÄúN‚Äù seguidas por cada archivo FASTQ\nLa letra N representa un nucle√≥tido que no pudo ser le√≠do correctamente, y se reporta como ninguno, o missing data. Imprime el n√∫mero de secuencias que tenga diez N seguidas por cada uno de los archivos fastq de la carpeta _files.\nEjercicio 13.2 Contar el n√∫mero de secuencias (l√≠neas) en cada archivo FASTQ\nAhora, determina el n√∫mero de secuencias (lineas) de cada archivo .fastq por separado. Se conoce que los t√≠tulos de las corridas de las secuencias en cada archivo .fastq empiezan con el string @SRR098026.\nEjercicio 13.3 Identifica el n√∫mero de secuencias con calidad baja.\nEn los archivos FASTQ, la tercera l√≠nea de cada entrada contiene el s√≠mbolo +, mientras que la cuarta l√≠nea representa la calidad de la secuencia en formato ASCII. Determina cu√°ntas secuencias tienen una calidad promedio por debajo de un umbral espec√≠fico (por ejemplo, una calidad promedio menor a 20).\nEjercicio 13.4 Cuenta cu√°ntas secuencias √∫nicas hay en cada archivo.\nDetermina cu√°ntas secuencias √∫nicas (sin repeticiones) existen en cada archivo. Aseg√∫rate de ignorar las l√≠neas que comienzan con @ o +, ya que no forman parte de las secuencias.\nEjercicio 13.5 Encuentra la longitud promedio de las secuencias.\nCalcula la longitud promedio de las secuencias en cada archivo. Esto requiere sumar las longitudes de todas las secuencias y dividirlas entre el n√∫mero total de secuencias.\nEjercicio 13.6\nCalcula el porcentaje de GC en el archivo secuencias1.fastq en un script.\nEjercicio 13.7\nTomando en cuenta el ejercicio anterior, calcula el porcentaje de GC de los tres archivos fastq secuencias1.fastq,secuencias2.fastq,secuencias3.fastq utilizando ciclos y/o bucles.\nEjercicio 13.8\nCalcula el contenido de cada una de las bases en las secuencias del archivo secuencias1.fastq, A,T,G,C y N.\nEjercicio 13.9\nCalcula la distribuci√≥n de las longitudes de las secuencias en el archivo secuencias1.fastq. En este ejercicio, deber√°n discutir qu√© hace cada uno de los pasos dentro del script y discutirlos con el resto de la clase.\nEjercicio 13.10\nEste ejercicio calcula la distribuci√≥n de las longitudes de las secuencias en una lista de archivos fastq. En este ejercicio, deber√°n discutir qu√© hace cada uno de los pasos dentro del script y discutirlos con el resto de la clase.\nEjercicio\nY la historia continua ‚Ä¶.",
    "crumbs": [
      "<span class='chapter-number'>15</span>¬† <span class='chapter-title'>Ejercicios en equipo</span>"
    ]
  },
  {
    "objectID": "Parte3A.html#ejercicio-7-edici√≥n-de-archivos",
    "href": "Parte3A.html#ejercicio-7-edici√≥n-de-archivos",
    "title": "7¬† Edici√≥n de archivos con los editores de texto (nano y vim)",
    "section": "7.1 Ejercicio 7: Edici√≥n de archivos",
    "text": "7.1 Ejercicio 7: Edici√≥n de archivos",
    "crumbs": [
      "**Section 3** - Edici√≥n de archivos",
      "<span class='chapter-number'>7</span>¬† <span class='chapter-title'>Edici√≥n de archivos con los editores de texto (nano y vim)</span>"
    ]
  },
  {
    "objectID": "Parte3B.html#section",
    "href": "Parte3B.html#section",
    "title": "8¬† Edici√≥n de archivos con el editor de flujo sed",
    "section": "8.2 ",
    "text": "8.2",
    "crumbs": [
      "**Section 3** - Edici√≥n de archivos",
      "<span class='chapter-number'>8</span>¬† <span class='chapter-title'>Edici√≥n de archivos con el editor de flujo `sed`</span>"
    ]
  }
]